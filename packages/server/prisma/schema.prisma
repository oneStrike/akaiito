generator client {
  provider        = "prisma-client-js"
  binaryTargets   = ["native", "linux-musl"]
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

/// 管理端接口调用记录
model AdminLog {
  id         Int      @id @default(autoincrement()) /// 主键id
  username   String?  @db.VarChar(50) /// 用户名
  userId     Int?     @map("user_id") /// 用户主键Id
  method     String?  @db.VarChar(50) /// 请求类型
  ip         String?  @db.VarChar(20) /// 调用ip
  ipAddress  String?  @map("ip_address") @db.VarChar(300) /// ip映射地址
  statusCode Int?     @default(1) @map("status_code") /// 响应状态码
  statusDesc String?  @map("receipt_desc") @db.VarChar(300) /// 响应描述
  path       String?  @db.VarChar(255) /// 请求地址
  summary    String?  @db.VarChar(255) /// 请求地址描述信息
  record     String?  @db.VarChar(255) /// 操作记录
  userAgent  String?  @map("user_agent") @db.VarChar(255) /// 浏览器信息标识
  params     String?  @db.LongText /// 请求参数
  createdAt  DateTime @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt  DateTime @updatedAt @map("updated_at") @db.DateTime(0)

  @@map("admin_log")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model AdminUser {
  id        Int       @id @default(autoincrement()) ///主键id
  username  String?   @unique(map: "username") @db.VarChar(50) /// 账号
  password  String?   @db.VarChar(100) ///密码
  avatar    String?   @db.VarChar(100) ///头像
  mobile    String?   @unique(map: "mobile") @db.VarChar(20) ///手机号
  status    Int?      @default(1) @db.TinyInt ///状态 0禁用 1正常
  isRoot    Int?      @default(0) @map("is_root") @db.TinyInt ///是否是超级管理员 1是0否
  createdAt DateTime? @default(now()) @map("created_at") @db.DateTime(0) ///创建时间
  updatedAt DateTime? @updatedAt @map("updated_at") @db.DateTime(0) /// 更新时间

  @@map("admin_user")
}

model Baseentity {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt DateTime? @updatedAt @map("updated_at") @db.DateTime(0)
  deletedAt DateTime? @map("deleted_at") @db.DateTime(0)

  @@map("baseentity")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ClientManagePage {
  id        Int       @id @default(autoincrement())
  pageName  String    @map("page_name") @db.VarChar(50)
  pagePath  String    @map("page_path") @db.VarChar(100)
  pageTitle String    @map("page_title") @db.VarChar(50)
  role      String    @default("normal") @db.VarChar(10)
  vipLevel  Int?      @map("vip_level")
  status    Int?      @default(1)
  createdAt DateTime  @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt DateTime? @updatedAt @map("updated_at") @db.DateTime(0)
  deletedAt DateTime? @map("deleted_at") @db.DateTime(0)

  @@map("client_manage_page")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Material {
  id           Int       @id @default(autoincrement())
  materialName String    @map("material_name") @db.VarChar(50)
  path         String    @unique(map: "path") @db.VarChar(255)
  materialType String    @map("material_type") @db.VarChar(255)
  createdAt    DateTime  @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt    DateTime? @updatedAt @map("updated_at") @db.DateTime(0)
  deletedAt    DateTime? @map("deleted_at") @db.DateTime(0)
  groupId      Int       @map("group_id")

  @@map("material")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model MaterialGroup {
  id        Int       @id @default(autoincrement())
  groupName String    @unique(map: "group_name") @map("group_name") @db.VarChar(50)
  sort      Int       @unique(map: "sort")
  createdAt DateTime  @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt DateTime? @updatedAt @map("updated_at") @db.DateTime(0)
  deletedAt DateTime? @map("deleted_at") @db.DateTime(0)

  @@map("material_group")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Privacy {
  id        Int       @id @default(autoincrement())
  name      String    @db.VarChar(20)
  content   String    @db.MediumText
  platform  String    @db.VarChar(10)
  status    Int       @default(1) @db.TinyInt
  remark    String?   @db.VarChar(255)
  createdAt DateTime  @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt DateTime? @updatedAt @map("updated_at") @db.DateTime(0)
  deletedAt DateTime? @map("deleted_at") @db.DateTime(0)

  @@map("privacy")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model SocialCircleClassify {
  id           Int       @id @default(autoincrement())
  classifyName String    @unique(map: "classify_name") @map("classify_name") @db.VarChar(50)
  sort         Int       @unique(map: "sort")
  createdAt    DateTime  @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt    DateTime? @updatedAt @map("updated_at") @db.DateTime(0)
  deletedAt    DateTime? @map("deleted_at") @db.DateTime(0)

  @@map("social_circle_classify")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model SocialCircle {
  id           Int       @id @default(autoincrement())
  name         String?   @unique(map: "name") @db.VarChar(50)
  icon         String    @db.VarChar(255)
  cover        String    @db.VarChar(255)
  creatorId    Int?      @map("creator_id")
  creatorName  String    @map("creator_name") @db.VarChar(50)
  classifyId   Int?      @map("classify_id")
  classifyName String?   @map("classify_name") @db.VarChar(50)
  desc         String    @db.VarChar(255)
  memberTitle  String    @map("member_title") @db.VarChar(50)
  followers    Int?      @default(0)
  vFollowers   Int?      @default(0) @map("v_followers")
  rule         String    @db.VarChar(255)
  guide        Int?      @default(0) @db.TinyInt
  status       Int?      @default(0) @db.TinyInt
  bannedReason String?   @map("banned_reason") @db.VarChar(255)
  createdAt    DateTime  @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt    DateTime? @updatedAt @map("updated_at") @db.DateTime(0)
  deletedAt    DateTime? @map("deleted_at") @db.DateTime(0)

  @@map("social_circle")
}

model DataDictionary {
  id        Int       @id @default(autoincrement())
  name      String?   @unique(map: "name") @db.VarChar(50)
  code      String?   @unique(map: "code") @db.VarChar(50)
  status    Int?      @default(0) @db.TinyInt
  desc      String    @db.VarChar(255)
  createdAt DateTime  @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt DateTime? @updatedAt @map("updated_at") @db.DateTime(0)

  @@map("data_dictionary")
}

model DataDictionaryItems {
  id             Int       @id @default(autoincrement())
  dictionaryId   Int       @map("dictionary_id")
  dictionaryName String    @map("dictionary_name")
  name           String?   @unique(map: "name") @db.VarChar(50)
  code           String?   @unique(map: "code") @db.VarChar(50)
  order          Int?      @default(1) @db.SmallInt
  status         Int       @default(0) @db.TinyInt
  desc           String    @db.VarChar(255)
  createdAt      DateTime  @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt      DateTime? @updatedAt @map("updated_at") @db.DateTime(0)

  @@map("data_dictionary_items")
}
