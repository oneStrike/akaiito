model Comic {
  /// 主键id
  id            Int             @id @default(autoincrement())
  /// 漫画名称
  name          String          @unique(map: "name") @db.VarChar(50)
  /// 热度
  hot           Int             @default(0) @db.MediumInt
  /// 作者id
  authorId      Int             @map("author_id") @db.MediumInt
  /// 封面
  cover         String          @db.VarChar(255)
  /// 状态 1：正常 0：禁用
  status        Int             @default(1) @db.TinyInt
  /// 发布日期
  publishAt     DateTime        @map("publish_at") @db.DateTime(0)
  /// 最后更新时间
  lastUpdated   DateTime        @map("last_updated") @db.DateTime(0)
  /// 描述
  description   String          @db.VarChar(255)
  /// 章节数量
  source        String          @db.VarChar(50)
  ///
  wordCount     Int             @default(0) @db.MediumInt
  createdAt     DateTime        @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt     DateTime        @updatedAt @map("updated_at") @db.DateTime(0)
  NovelCategory NovelCategory[]

  @@map("comic")
}

model Novel {
  /// 主键id
  id            Int             @id @default(autoincrement())
  /// 小说名称
  name          String          @unique(map: "name") @db.VarChar(50)
  /// 热度
  hot           Int             @default(0) @db.MediumInt
  /// 作者id
  authorId      Int             @map("author_id") @db.MediumInt
  /// 封面
  cover         String          @db.VarChar(255)
  /// 状态 1：正常 0：禁用
  status        Int             @default(1) @db.TinyInt
  /// 发布日期
  publishAt     DateTime        @map("publish_at") @db.DateTime(0)
  /// 最后更新时间
  lastUpdated   DateTime        @map("last_updated") @db.DateTime(0)
  /// 描述
  description   String          @db.VarChar(255)
  /// 章节数量
  chapterCount  Int             @default(0) @db.MediumInt
  /// 总字数
  wordCount     Int             @default(0) @db.MediumInt
  createdAt     DateTime        @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt     DateTime        @updatedAt @map("updated_at") @db.DateTime(0)
  NovelCategory NovelCategory[]

  @@map("novel")
}

model Category {
  /// 主键id
  id            Int             @id @default(autoincrement())
  /// 分类名称
  name          String          @unique(map: "name") @db.VarChar(50)
  /// 分类图标
  icon          String          @db.MediumText
  /// 热度
  hot           Int?            @default(0) @db.MediumInt
  /// 辅助热度
  auxiliaryHot  Int?            @default(0) @map("auxiliary_hot") @db.MediumInt
  /// 排序
  sort          Int?            @default(0) @db.MediumInt
  /// 小说数量
  novelCount    Int?            @default(0) @map("novel_count") @db.MediumInt
  /// 漫画数量
  mangaCount    Int?            @default(0) @map("manga_count") @db.MediumInt
  /// 图片数量
  imageCount    Int?            @default(0) @map("image_count") @db.MediumInt
  /// 状态 1：正常 0：禁用
  status        Int?            @default(1) @db.TinyInt
  /// 分类是否适用于小说 1：适用 0：不适用
  novelModel    Int             @default(1) @map("novel_model") @db.TinyInt
  /// 分类是否适用于漫画 1：适用 0：不适用
  mangaModel    Int             @default(1) @map("manga_model") @db.TinyInt
  /// 分类是否适用于图片 1：适用 0：不适用
  imageModel    Int             @default(1) @map("image_model") @db.TinyInt
  createdAt     DateTime        @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt     DateTime?       @updatedAt @map("updated_at") @db.DateTime(0)
  NovelCategory NovelCategory[]

  @@map("category")
}

model NovelCategory {
  /// 主键id
  id         Int      @id @default(autoincrement())
  /// 内容id
  contentId  Int      @map("content_id")
  /// 分类id
  categoryId Int      @map("category_id")
  Category   Category @relation(fields: [categoryId], references: [id])
  Novel      Novel    @relation(fields: [contentId], references: [id])
  Comic      Comic?   @relation(fields: [comicId], references: [id])
  comicId    Int?

  @@unique([contentId, categoryId])
  @@index([categoryId], map: "novel_category_category_id_fkey")
  @@map("novel_category")
}

/// 作者
model Author {
  /// 主键id
  id           Int       @id @default(autoincrement())
  /// 作者名称
  name         String    @db.VarChar(50)
  /// 作者头像
  avatar       String?   @db.VarChar(255)
  /// 作者描述
  description  String?   @db.VarChar(255)
  /// 状态 1：正常 0：禁用
  status       Int?      @default(1) @db.TinyInt
  /// 作者主页
  website      String?   @db.VarChar(255)
  /// 作者内容类型 1==>小说 2==>漫画 3==>插画 4==>coser
  contentModel Int       @map("content_model") @db.TinyInt
  createdAt    DateTime  @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt    DateTime? @updatedAt @map("updated_at") @db.DateTime(0)

  @@unique([name, contentModel])
  @@map("author")
}
