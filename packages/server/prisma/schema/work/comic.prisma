model Comic {
  /// 主键id
  id                Int               @id @default(autoincrement())
  /// 漫画名称
  name              String            @unique @db.VarChar(50)
  /// 漫画别名
  alias             String            @unique @db.VarChar(50)
  /// 封面
  cover             String            @db.VarChar(255)
  /// 热度
  popularity        Int               @default(0) @db.Integer
  /// 虚拟热度
  virtualPopularity Int               @default(0) @map("virtual_popularity") @db.Integer
  /// 语言
  language          String            @db.VarChar(20)
  /// 地区
  region            String            @db.VarChar(20)
  /// 作者id
  authorId          Int               @map("author_id") @db.Integer
  author            Author            @relation(fields: [authorId], references: [id])
  /// 权限
  permissions       Permissions       @relation(fields: [permissionId], references: [id])
  permissionId      Int               @db.Integer
  /// 是否发布 1：发布 0：不发布
  isPublish         Boolean           @default(false) @db.Boolean
  /// 发布日期
  publishAt         DateTime?         @map("publish_at") @db.Timestamp(0)
  /// 最后更新时间
  lastUpdated       DateTime?         @map("last_updated") @db.Timestamp(0)
  /// 描述
  description       String            @db.VarChar(1000)
  /// 出版社
  publisher         String?           @db.VarChar(30)
  /// 是否已经完结
  isFinished        Boolean           @default(false) @map("is_finished")
  /// 创建时间
  createdAt         DateTime          @default(now()) @map("created_at") @db.Timestamp(0)
  /// 更新时间
  updatedAt         DateTime          @updatedAt @map("updated_at") @db.Timestamp(0)
  /// 分类
  categories        ComicCategories[]
  /// 章节
  Chapters          Chapter[]

  @@index([authorId])
  @@index([permissionId])
  @@map("comic")
}

model ComicCategories {
  comicId    Int
  categoryId Int
  comic      Comic    @relation(fields: [comicId], references: [id])
  category   Category @relation(fields: [categoryId], references: [id])

  @@id([comicId, categoryId])
  @@index([categoryId])
  @@map("comic_categories")
}

model ComicContent {
  id        Int     @id @default(autoincrement())
  /// url
  url       String  @db.VarChar(300)
  /// 排序
  order     Int     @default(autoincrement()) @db.Integer
  /// 章节id
  chapter   Chapter @relation(fields: [chapterId], references: [id])
  chapterId Int     @db.Integer

  @@index([chapterId])
  @@map("comic_content")
}
