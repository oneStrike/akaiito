/**
 * 标签类型常量定义
 * 0: 兴趣爱好 - 用户的兴趣偏好标签，如音乐、电影、运动等
 * 1: 行为特征 - 基于用户行为分析的标签，如活跃用户、夜猫子等
 * 2: 人口统计 - 基于用户基本信息的标签，如年龄段、地域等
 * 3: 偏好设置 - 用户主动设置的偏好标签，如主题风格、语言等
 * 4: 技能特长 - 用户的专业技能和特长标签，如编程、设计等
 * 5: 系统标签 - 系统自动生成的标签，如新用户、VIP用户等
 * 6: 自定义标签 - 用户或管理员自定义的个性化标签
 */

/**
 * 标签状态常量定义
 * 0: 激活 - 标签正常可用，可以被分配给用户
 * 1: 停用 - 标签暂时停用，不再分配给新用户但保留历史数据
 * 2: 已删除 - 标签已被删除，仅保留用于数据完整性
 */

/// 用户标签主表
model ClientUserTag {
  /// 主键ID
  id          String @id @default(cuid()) @map("id")
  /// 标签名称
  name        String @map("name") @db.VarChar(50)
  /// 标签显示名称
  displayName String @map("display_name") @db.VarChar(100)
  /// 标签描述
  description String? @map("description") @db.VarChar(500)
  /// 标签类型（0:兴趣爱好 1:行为特征 2:人口统计 3:偏好设置 4:技能特长 5:系统标签 6:自定义标签）
  /// 用于分类管理不同类型的用户标签，便于标签体系的组织和管理
  type        Int @map("type") @db.SmallInt
  /// 标签颜色（十六进制格式，如#FF5733）
  /// 用于前端显示标签时的颜色标识，提升用户体验
  color       String? @map("color") @db.VarChar(7)
  /// 标签图标（图标名称或Unicode字符）
  /// 用于前端显示标签时的图标标识，增强视觉效果
  icon        String? @map("icon") @db.VarChar(50)
  /// 标签状态（0:激活 1:停用 2:已删除）
  /// 默认值为0（激活），控制标签的可用性和生命周期
  status      Int @default(0) @map("status") @db.SmallInt
  /// 排序权重（数值越大排序越靠前）
  /// 用于控制标签在列表中的显示顺序，便于重要标签的优先展示
  sortOrder   Int @default(0) @map("sort_order")
  /// 是否系统标签（系统自动生成的标签不允许用户删除）
  /// 系统标签由平台维护，用于核心业务逻辑，如用户等级、认证状态等
  isSystem    Boolean @default(false) @map("is_system")
  /// 父标签ID（用于构建标签层级关系）
  /// 支持标签的树形结构，便于标签分类管理和层级查询
  parentId    String? @map("parent_id")
  /// 父标签关系
  parent      ClientUserTag? @relation("TagHierarchy", fields: [parentId], references: [id])
  /// 子标签列表
  children    ClientUserTag[] @relation("TagHierarchy")
  
  // === 统计信息 ===
  /// 使用次数
  usageCount  Int @default(0) @map("usage_count")
  /// 最后使用时间
  lastUsedAt  DateTime? @map("last_used_at") @db.Timestamptz
  
  // === 关联关系 ===
  /// 用户标签关联
  userTags    ClientUserTagRelation[]
  
  // === 时间戳 ===
  /// 创建时间
  createdAt   DateTime @default(now()) @map("created_at") @db.Timestamptz
  /// 更新时间
  updatedAt   DateTime @updatedAt @map("updated_at") @db.Timestamptz
  /// 创建者ID
  createdBy   String? @map("created_by")
  
  @@unique([name, type]) // 同类型下标签名称唯一
  @@index([type, status]) // 标签类型和状态查询
  @@index([parentId]) // 父标签查询
  @@index([usageCount]) // 使用频率排序
  @@index([sortOrder, type]) // 排序查询
  @@index([isSystem, status]) // 系统标签查询
  @@map("client_user_tag")
}

/// 用户标签关联表
model ClientUserTagRelation {
  /// 主键ID
  id        String @id @default(cuid()) @map("id")
  /// 关联用户ID
  userId    String @map("user_id")
  /// 关联用户
  user      ClientUser @relation(fields: [userId], references: [id], onDelete: Cascade)
  /// 关联标签ID
  tagId     String @map("tag_id")
  /// 关联标签
  tag       ClientUserTag @relation(fields: [tagId], references: [id], onDelete: Cascade)
  
  // === 关联信息 ===
  /// 标签权重（0-100，数值越高表示标签对用户的重要性越大）
  /// 用于个性化推荐和用户画像分析，权重高的标签影响力更大
  weight    Int @default(50) @map("weight") @db.SmallInt
  /// 标签来源（manual:手动添加 system:系统生成 auto:自动识别）
  /// 记录标签的添加方式，便于区分用户主动行为和系统智能分析
  source    String @default("manual") @map("source") @db.VarChar(20)
  /// 置信度（0-100，表示标签准确性的可信程度）
  /// 系统自动生成的标签会有置信度评分，用于标签质量评估
  confidence Int @default(100) @map("confidence") @db.SmallInt
  /// 是否用户主动添加（区分用户主动添加和系统推荐）
  /// 用户主动添加的标签通常具有更高的准确性和重要性
  isUserAdded Boolean @default(true) @map("is_user_added")
  /// 是否显示在个人资料（控制标签在用户资料页的可见性）
  /// 用户可以选择隐藏某些标签，保护个人隐私
  isVisible Boolean @default(true) @map("is_visible")
  
  // === 统计信息 ===
  /// 标签使用次数
  usageCount Int @default(0) @map("usage_count")
  /// 最后使用时间
  lastUsedAt DateTime? @map("last_used_at") @db.Timestamptz
  
  // === 时间戳 ===
  /// 添加时间
  addedAt   DateTime @default(now()) @map("added_at") @db.Timestamptz
  /// 更新时间
  updatedAt DateTime @updatedAt @map("updated_at") @db.Timestamptz
  /// 过期时间（临时标签）
  expiresAt DateTime? @map("expires_at") @db.Timestamptz
  
  @@unique([userId, tagId]) // 用户标签关联唯一
  @@index([userId, weight]) // 用户标签权重排序
  @@index([tagId, addedAt]) // 标签使用统计
  @@index([source, confidence]) // 标签来源分析
  @@index([isVisible, weight]) // 可见标签查询
  @@index([expiresAt]) // 过期标签清理
  @@index([lastUsedAt]) // 活跃标签分析
  @@map("client_user_tag_relation")
}

/// 用户行为标签自动生成规则表
model ClientUserTagRule {
  /// 主键ID
  id          String @id @default(cuid()) @map("id")
  /// 规则名称
  name        String @map("name") @db.VarChar(100)
  /// 规则描述
  description String? @map("description") @db.VarChar(500)
  /// 目标标签ID
  targetTagId String @map("target_tag_id")
  /// 目标标签
  targetTag   ClientUserTag @relation(fields: [targetTagId], references: [id], onDelete: Cascade)
  
  // === 规则条件 ===
  /// 条件表达式（JSON格式，定义触发标签分配的条件）
  /// 例如：{"userLevel": {"gte": 3}, "totalSpent": {"gte": 1000}}
  /// 支持复杂的条件组合，用于精确的用户标签自动化管理
  conditions  Json @map("conditions")
  /// 规则动作（add:添加标签 remove:移除标签）
  /// 定义当条件满足时对标签执行的操作类型
  action     String @map("action") @db.VarChar(20)
  /// 规则优先级（数值越大优先级越高）
  /// 当多个规则冲突时，优先级高的规则优先执行
  priority   Int @default(0) @map("priority")
  /// 是否启用（控制规则的激活状态）
  /// 可以临时禁用规则而不删除，便于规则管理和调试
  isEnabled  Boolean @default(true) @map("is_enabled")
  /// 触发阈值
  threshold   Int @default(1) @map("threshold")
  /// 时间窗口（天）
  timeWindow  Int @default(30) @map("time_window")
  /// 权重计算公式
  weightFormula String? @map("weight_formula") @db.VarChar(255)
  /// 执行次数
  executeCount Int @default(0) @map("execute_count")
  /// 最后执行时间
  lastExecuteAt DateTime? @map("last_execute_at") @db.Timestamptz
  
  // === 时间戳 ===
  /// 创建时间
  createdAt   DateTime @default(now()) @map("created_at") @db.Timestamptz
  /// 更新时间
  updatedAt   DateTime @updatedAt @map("updated_at") @db.Timestamptz
  /// 创建者ID
  createdBy   String? @map("created_by")
  
  @@index([targetTagId, isEnabled]) // 标签规则查询
  @@index([priority, isEnabled]) // 优先级排序
  @@index([lastExecuteAt]) // 执行时间查询
  @@map("client_user_tag_rule")
}

/// 用户画像分析表
model ClientUserProfileAnalysis {
  /// 主键ID
  id       String @id @default(cuid()) @map("id")
  /// 关联用户ID
  userId   String @unique @map("user_id")
  /// 关联用户
  user     ClientUser @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  // === 用户画像数据 ===
  /// 用户画像JSON数据
  profileData Json? @map("profile_data")
  /// 兴趣偏好分析
  interests Json? @map("interests")
  /// 行为特征分析
  behaviors Json? @map("behaviors")
  /// 消费习惯分析
  consumption Json? @map("consumption")
  /// 活跃度分析
  activity  Json? @map("activity")
  
  // === 推荐算法相关 ===
  /// 推荐权重向量
  recommendWeights Json? @map("recommend_weights")
  /// 相似用户列表
  similarUsers Json? @map("similar_users")
  /// 个性化标签
  personalTags Json? @map("personal_tags")
  
  // === 分析统计 ===
  /// 画像完整度（0-100）
  completeness Int @default(0) @map("completeness") @db.SmallInt
  /// 数据质量评分（0-100）
  qualityScore Int @default(0) @map("quality_score") @db.SmallInt
  /// 最后分析时间
  lastAnalyzedAt DateTime? @map("last_analyzed_at") @db.Timestamptz
  /// 分析版本号（标识使用的算法版本）
  /// 用于追踪分析算法的迭代，便于结果对比和算法优化
  analysisVersion String? @map("analysis_version") @db.VarChar(20)
  
  // === 时间戳 ===
  /// 创建时间
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz
  /// 更新时间
  updatedAt DateTime @updatedAt @map("updated_at") @db.Timestamptz
  
  @@index([completeness]) // 画像完整度查询
  @@index([qualityScore]) // 数据质量排序
  @@index([lastAnalyzedAt]) // 分析时间查询
  @@map("client_user_profile_analysis")
}