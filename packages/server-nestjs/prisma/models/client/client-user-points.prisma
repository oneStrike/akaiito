/**
 * 积分变动类型常量定义
 * 0: 获得积分 - 用户通过各种方式获得积分的正向变动
 * 1: 消费积分 - 用户使用积分兑换商品或服务的负向变动
 * 2: 退还积分 - 因退款、取消订单等原因返还给用户的积分
 * 3: 积分过期 - 超过有效期自动扣除的积分
 * 4: 管理员调整 - 管理员手动调整用户积分余额
 * 5: 积分转移 - 用户之间的积分转账操作
 */

/**
 * 积分来源常量定义
 * 0: 注册奖励 - 新用户注册完成后获得的欢迎积分
 * 1: 登录奖励 - 用户每日首次登录获得的积分奖励
 * 2: 每日签到 - 用户完成每日签到任务获得的积分
 * 3: 邀请奖励 - 成功邀请新用户注册后获得的推广积分
 * 4: 购买消费 - 用户购买商品或服务时获得的消费积分
 * 5: 评价奖励 - 用户对商品或服务进行评价后获得的积分
 * 6: 分享奖励 - 用户分享内容到社交媒体后获得的积分
 * 7: 任务完成 - 用户完成平台指定任务后获得的积分
 * 8: 活动奖励 - 参与平台活动或促销获得的特殊积分
 * 9: 退款返还 - 因订单退款而返还的积分
 * 10: 管理员操作 - 管理员手动增减积分的操作记录
 * 11: 系统调整 - 系统自动调整或修正的积分变动
 * 12: 转入 - 从其他用户转入的积分
 * 13: 转出 - 转给其他用户的积分
 * 14: 过期扣除 - 因积分过期而自动扣除的记录
 */

/// 用户积分变动记录表
model ClientUserPointsHistory {
  /// 主键ID
  id          String @id @default(cuid()) @map("id")
  /// 关联用户ID
  userId      String @map("user_id")
  /// 关联用户
  user        ClientUser @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  // === 积分变动信息 ===
  /// 变动类型（0:获得 1:消费 2:退还 3:过期 4:管理员调整 5:积分转移）
  /// 用于区分积分变动的操作类型，便于统计和分析
  changeType  Int @map("change_type") @db.SmallInt
  /// 积分来源（0:注册 1:登录 2:签到 3:邀请 4:购买 5:评价 6:分享 7:任务 8:活动 9:退款 10:管理员 11:系统 12:转入 13:转出 14:过期）
  /// 详细记录积分的具体来源，用于用户行为分析和运营决策
  source      Int @map("source") @db.SmallInt
  /// 变动数量（正数为增加，负数为减少）
  amount      Int @map("amount")
  /// 变动前余额
  balanceBefore Int @map("balance_before")
  /// 变动后余额
  balanceAfter Int @map("balance_after")
  
  // === 关联信息 ===
  /// 关联订单ID
  orderId     String? @map("order_id") @db.VarChar(50)
  /// 关联活动ID
  eventId     String? @map("event_id") @db.VarChar(50)
  /// 关联任务ID
  taskId      String? @map("task_id") @db.VarChar(50)
  /// 邀请人ID（邀请奖励时使用）
  inviterId   String? @map("inviter_id")
  /// 转账目标用户ID（积分转移时使用）
  targetUserId String? @map("target_user_id")
  
  // === 详细信息 ===
  /// 变动描述
  description String @map("description") @db.VarChar(500)
  /// 备注信息
  remark      String? @map("remark") @db.VarChar(255)
  /// 过期时间（如果积分有有效期）
  expiresAt   DateTime? @map("expires_at") @db.Timestamptz
  /// 操作员ID（管理员操作时记录）
  operatorId  String? @map("operator_id")
  
  // === 状态信息 ===
  /// 是否已处理
  isProcessed Boolean @default(true) @map("is_processed")
  /// 是否已撤销
  isReverted  Boolean @default(false) @map("is_reverted")
  /// 撤销时间
  revertedAt  DateTime? @map("reverted_at") @db.Timestamptz
  /// 撤销原因
  revertReason String? @map("revert_reason") @db.VarChar(255)
  
  // === 时间戳 ===
  /// 创建时间
  createdAt   DateTime @default(now()) @map("created_at") @db.Timestamptz
  /// 更新时间
  updatedAt   DateTime @updatedAt @map("updated_at") @db.Timestamptz
  
  @@index([userId, createdAt]) // 用户积分历史查询
  @@index([changeType, source]) // 积分变动类型统计
  @@index([orderId]) // 订单关联查询
  @@index([eventId]) // 活动关联查询
  @@index([inviterId]) // 邀请奖励查询
  @@index([isProcessed, createdAt]) // 处理状态查询
  @@index([expiresAt]) // 积分过期查询
  @@index([source, createdAt]) // 积分来源统计
  @@map("client_user_points_history")
}

/// 用户每日签到记录表
model ClientUserDailyCheckin {
  /// 主键ID
  id          String @id @default(cuid()) @map("id")
  /// 关联用户ID
  userId      String @map("user_id")
  /// 关联用户
  user        ClientUser @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  // === 签到信息 ===
  /// 签到日期
  checkinDate DateTime @map("checkin_date") @db.Date
  /// 连续签到天数
  consecutiveDays Int @default(1) @map("consecutive_days")
  /// 本月签到天数
  monthlyDays Int @default(1) @map("monthly_days")
  /// 获得积分
  pointsEarned Int @default(0) @map("points_earned")
  /// 是否获得额外奖励
  hasBonus    Boolean @default(false) @map("has_bonus")
  /// 奖励类型
  bonusType   String? @map("bonus_type") @db.VarChar(50)
  /// 奖励数量
  bonusAmount Int? @map("bonus_amount")
  
  // === 签到详情 ===
  /// 签到IP地址
  ipAddress   String? @map("ip_address") @db.VarChar(45)
  /// 签到设备
  deviceInfo  String? @map("device_info") @db.VarChar(255)
  /// 签到地理位置
  location    String? @map("location") @db.VarChar(255)
  
  // === 时间戳 ===
  /// 签到时间
  checkinAt   DateTime @default(now()) @map("checkin_at") @db.Timestamptz
  /// 创建时间
  createdAt   DateTime @default(now()) @map("created_at") @db.Timestamptz
  
  @@unique([userId, checkinDate]) // 每天只能签到一次
  @@index([userId, checkinDate]) // 用户签到历史查询
  @@index([consecutiveDays]) // 连续签到排行
  @@index([checkinDate]) // 日期统计
  @@index([hasBonus, bonusType]) // 奖励统计
  @@map("client_user_daily_checkin")
}

/// 用户等级变更记录表
model ClientUserLevelHistory {
  /// 主键ID
  id          String @id @default(cuid()) @map("id")
  /// 关联用户ID
  userId      String @map("user_id")
  /// 关联用户
  user        ClientUser @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  // === 等级变更信息 ===
  /// 变更前等级（0:青铜 1:白银 2:黄金 3:铂金 4:钻石 5:VIP）
  /// 记录用户等级变更前的等级状态
  fromLevel   Int @map("from_level") @db.SmallInt
  /// 变更后等级（0:青铜 1:白银 2:黄金 3:铂金 4:钻石 5:VIP）
  /// 记录用户等级变更后的新等级状态
  toLevel     Int @map("to_level") @db.SmallInt
  /// 变更时经验值
  experienceAtChange Int @map("experience_at_change")
  /// 变更原因
  reason      String @map("reason") @db.VarChar(255)
  /// 是否为升级
  isUpgrade   Boolean @map("is_upgrade")
  
  // === 奖励信息 ===
  /// 等级奖励积分
  rewardPoints Int? @map("reward_points")
  /// 等级奖励描述
  rewardDescription String? @map("reward_description") @db.VarChar(500)
  
  // === 时间戳 ===
  /// 变更时间
  changedAt   DateTime @default(now()) @map("changed_at") @db.Timestamptz
  /// 创建时间
  createdAt   DateTime @default(now()) @map("created_at") @db.Timestamptz
  
  @@index([userId, changedAt]) // 用户等级历史查询
  @@index([fromLevel, toLevel]) // 等级变更统计
  @@index([isUpgrade, changedAt]) // 升级统计
  @@index([toLevel, changedAt]) // 等级分布统计
  @@map("client_user_level_history")
}