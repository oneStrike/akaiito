stages:
  - build
  - docker

variables:
  ADMIN: 'asherith/admin'
  CLIENT: 'asherith/client'
  SERVER: 'asherith/server'
  PNPM_REGISTRY: 'https://registry.npmmirror.com'
  DOCKER_REGISTRY: 'registry.cn-hangzhou.aliyuncs.com'
  DOCKER_USER: 'Asherith'
  DOCKER_PASS: 'li259158'
  CURRENT_PROJECT: ''
  CURRENT_IMAGE: ''

cache:
  key: cache-$CI_COMMIT_REF_NAME
  paths:
    - node_modules/
    - pnpm-lock.yaml

default:
  tags:
    - akaiito
  artifacts:
    paths:
      - .gitlab-ci.yml
      - Dockerfile

.pnpm:
  image: node:18-alpine
  after_script:
    - corepack enable
    - pnpm config set registry $PNPM_REGISTRY
    - pnpm install -F @akaiito/$CURRENT_PROJECT --frozen-lockfile
    - pnpm -C packages/$CURRENT_PROJECT build

.docker:
  script:
    - docker login --username=$DOCKER_USER --password=$DOCKER_PASS $DOCKER_REGISTRY

.admin:
  artifacts:
    paths:
      - packages/admin/dist/
  only:
    changes:
      - packages/admin/**/*
      - .gitlab-ci.yml
      - Dockerfile

.client:
  artifacts:
    paths:
      - packages/client/dist/
  only:
    changes:
      - packages/client/**/*
      - .gitlab-ci.yml
      - Dockerfile
.server:
  artifacts:
    paths:
      - packages/server/dist/
      - packages/utils/dist/
  only:
    changes:
      - packages/server/**/*
      - .gitlab-ci.yml
      - Dockerfile

admin_build:
  stage: build
  extends:
    - .pnpm
    - .admin
  script:
    - echo $CURRENT_PROJECT
  variables:
    CURRENT_PROJECT: 'admin'

admin_docker:
  stage: docker
  extends:
    - .admin
    - .docker
  script:
    - docker rm -f $DOCKER_REGISTRY/$ADMIN || true
    - docker rmi -f $DOCKER_REGISTRY/$ADMIN || true
    - docker build . --target ADMIN --tag $DOCKER_REGISTRY/$ADMIN
    - docker tag $ADMIN $DOCKER_REGISTRY/$ADMIN:latest
    - docker push $DOCKER_REGISTRY/$ADMIN:latest

client_build:
  stage: build
  extends:
    - .pnpm
    - .client
  script:
    - echo $CURRENT_PROJECT
  variables:
    CURRENT_PROJECT: 'client'

client_docker:
  stage: docker
  extends:
    - .client
    - .docker
  script:
    - docker rm -f $DOCKER_REGISTRY/$CLIENT || true
    - docker rmi -f $DOCKER_REGISTRY/$CLIENT || true
    - docker build . --target CLIENT --tag $DOCKER_REGISTRY/$CLIENT
    - docker tag $CLIENT $DOCKER_REGISTRY/$CLIENT:latest
    - docker push $DOCKER_REGISTRY/$CLIENT:latest

server_build:
  stage: build
  extends:
    - .pnpm
    - .server
  script:
    - echo $CURRENT_PROJECT
  variables:
    CURRENT_PROJECT: 'client'

server_docker:
  stage: docker
  extends:
    - .server
    - .docker
  script:
    - docker rm -f $DOCKER_REGISTRY/$SERVER || true
    - docker rmi -f $DOCKER_REGISTRY/$SERVER || true
    - docker build . --target SERVER --tag $DOCKER_REGISTRY/$SERVER
    - docker tag $CLIENT $DOCKER_REGISTRY/$SERVER:latest
    - docker push $DOCKER_REGISTRY/$SERVER:latest
