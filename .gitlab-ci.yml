stages:
  - build
  - docker
  - run

variables:
  ADMIN: 'asherith/admin'
  CLIENT: 'asherith/client'
  SERVER: 'asherith/server'
  PNPM_REGISTRY: 'https://registry.npmmirror.com'
  DOCKER_REGISTRY: 'registry.cn-hangzhou.aliyuncs.com'
  DOCKER_USER: 'Asherith'
  DOCKER_PASS: 'li259158'
  CURRENT_PROJECT: ''
  CURRENT_IMAGE: ''
  CURRENT_IMAGE_STAGE: ''

cache:
  key: cache-$CI_COMMIT_REF_NAME
  paths:
    - node_modules/
    - pnpm-lock.yaml

default:
  tags:
    - akaiito
  artifacts:
    paths:
      - .gitlab-ci.yml
      - .dockerignore
      - Dockerfile

.build_job:
  image: node:16.20.0-alpine
  after_script:
    - corepack enable
    - pnpm config set registry $PNPM_REGISTRY
    - pnpm install -F @akaiito/$CURRENT_PROJECT --no-frozen-lockfile
    - pnpm -C packages/$CURRENT_PROJECT build
  artifacts:
    paths:
      - packages/$CURRENT_PROJECT/dist/
      - packages/utils/dist/

.docker_job:
  after_script:
    - docker login --username=$DOCKER_USER --password=$DOCKER_PASS $DOCKER_REGISTRY
    - docker ps | grep $CURRENT_IMAGE | awk '{print $1}' | xargs docker stop
    - docker ps | grep $CURRENT_IMAGE | awk '{print $1}' | xargs docker rm
    - docker rmi -f $CURRENT_IMAGE
    - docker build . --target $CURRENT_IMAGE_STAGE --tag $CURRENT_IMAGE
    - docker tag $CURRENT_IMAGE $CURRENT_IMAGE:latest
    - docker push $CURRENT_IMAGE:latest

.admin:
  only:
    changes:
      - packages/admin/**/*
      - .gitlab-ci.yml
      - Dockerfile

.client:
  only:
    changes:
      - packages/client/**/*
      - .gitlab-ci.yml
      - Dockerfile

.server:
  only:
    changes:
      - packages/server/**/*
      - .gitlab-ci.yml
      - Dockerfile

admin_build:
  stage: build
  extends:
    - .build_job
    - .admin
  script:
    - echo $CURRENT_PROJECT
  variables:
    CURRENT_PROJECT: 'admin'

admin_docker:
  stage: docker
  extends:
    - .admin
    - .docker_job
  variables:
    CURRENT_IMAGE: $DOCKER_REGISTRY/$ADMIN
    CURRENT_IMAGE_STAGE: 'admin'
  script:
    - echo $CURRENT_IMAGE

client_build:
  stage: build
  extends:
    - .build_job
    - .client
  script:
    - echo $CURRENT_PROJECT
  variables:
    CURRENT_PROJECT: 'client'

client_docker:
  stage: docker
  extends:
    - .client
    - .docker_job
  script:
    - echo $CURRENT_IMAGE
  variables:
    CURRENT_IMAGE: $DOCKER_REGISTRY/$CLIENT
    CURRENT_IMAGE_STAGE: 'client'

server_build:
  stage: build
  extends:
    - .build_job
    - .server
  script:
    - echo $CURRENT_PROJECT
  variables:
    CURRENT_PROJECT: 'server'

server_docker:
  stage: docker
  extends:
    - .server
    - .docker_job
  script:
    - echo $CURRENT_IMAGE
  variables:
    CURRENT_IMAGE: $DOCKER_REGISTRY/$SERVER
    CURRENT_IMAGE_STAGE: 'server'

run_admin_job:
  stage: run
  extends:
    - .admin
  script:
    - docker run -d -p 80:80 $DOCKER_REGISTRY/$ADMIN

run_client_job:
  stage: run
  extends:
    - .client
  script:
    - docker run -d -p 82:80 $DOCKER_REGISTRY/$CLIENT

run_server_job:
  stage: run
  extends:
    - .server
  script:
    - docker run --add-host akaiito:172.26.95.99 -d -p 7001:7001 $DOCKER_REGISTRY/$SERVER
